---
#- name: Download the ST update
#  become: true
#  ansible.builtin.get_url:
#    url: "{{ ST_DOWNLOAD_LINK }}"
#    dest: "/opt/"
#    mode: '0755'
#    group: root
#    owner: root
#    validate_certs: false
- name: Create New Folders
  become: true
  ansible.builtin.file:
    path: "{{ INSTALLER_DIR }}/update"
    owner: "{{ ST_USER }}"
    group: "{{ ST_GROUP }}"
    mode: '0755'
    state: directory

#- name: Download and extract the ST Update
#  ansible.builtin.unarchive:
#    src: "{{ ST_UPDATE_LINK }}"
#    dest: "{{ INSTALLER_DIR }}/update"
#    mode: '0755'
#    owner: "{{ ST_USER }}"
#    group: "{{ ST_GROUP }}"
#    validate_certs: false
#    remote_src: true
    
- name: Find ST services
  find:
    paths: /etc/systemd/system
    patterns: "securetransport_*.service"
  register: st_services
  changed_when: False

  
- name: Stop ST services, if started
  become_user: root
  ansible.builtin.systemd_service:
    name: "{{ item.path | basename }}"
    state: stopped
  loop: "{{ st_services.files }}"

- name: Wait for stop
  ansible.builtin.wait_for:
    host: 0.0.0.0
    port: "{{ SSL_ADMIN_PORT }}"
    state: drained
  
- name: TM pid destroyed
  ansible.builtin.wait_for:
    path: "{{ FILEDRIVEHOME }}/var/run/tm.pid"
    state: absent

- name: DB pid destroyed
  ansible.builtin.wait_for:
    path: "{{ FILEDRIVEHOME }}/var/run/db.pid"
    state: absent

- name: ADMIN pid destroyed
  ansible.builtin.wait_for:
    path: "{{ FILEDRIVEHOME }}/var/run/admin/tomcat.pid"
    state: absent

#- name: Compress Directory contents
#  become: true
#  community.general.archive:
#    path: /opt/axway
#    dest: "{{ BACKUP_LOCATION }}/backup-{{ ansible_date_time.date }}.tar.gz"
#    mode: '0755'
#    format: gz
#    force_archive: true

- name: Find the name of UpdateStep1
  ansible.builtin.find:
    paths: "{{ INSTALLER_DIR }}/update/UpdateStep1/"
    patterns: '*.jar'
  register: step_1
  
- name: Find the name of UpdateStep2
  ansible.builtin.find:
    paths: "{{ INSTALLER_DIR }}/update/UpdateStep2/"
    patterns: 'SecureTransport-Update-5.5*allOS.jar'
  register: step_2

- name: print
  debug:
    msg: "{{ step_2 }}"

- name: Execute the script to apply Step 1
  command: "sh {{ AXWAY_HOME }}/Axway/update.sh -f {{ INSTALLER_DIR }}/update/UpdateStep1/"
  register: update_axway_installer
  ignore_errors: true


- name: Execute the script to apply Step 2
  command: "sh {{ AXWAY_HOME }}/Axway/update.sh -f {{ INSTALLER_DIR }}/update/UpdateStep2/"
  register: update_st_product


- name: Start ST services, if stopped
  become_user: root
  ansible.builtin.systemd_service:
    name: "{{ item.path | basename }}"
    state: started
  loop: "{{ st_services.files }}"


#- name: Execute the script
#  command: "sh {{ step_2['files'][0]['path'] }}"
## tasks file for st_update
