- name: Assign the HTTPS certificate
  vars:
    - parameter_path: /certificateAlias
    - parameter_value: services
    - srv_name: Http Default
  ansible.builtin.uri:
    url: https://{{ hostvars[inventory_hostname]['ansible_fqdn'] }}:{{ SSL_ADMIN_PORT }}/api/v2.0/servers/{{ srv_name | urlencode() }}
    method: PATCH
    validate_certs: false
    user: admin
    password: "{{ TMP_ADMIN_PWD }}"
    force_basic_auth: true
    return_content: true
    status_code: [204]
    timeout: 120
    body_format: json
    body: "{{ patch_json }}"
    headers:
      Content-Type: application/json
      Accept: application/json
      idp_id: ST_IDP
  when:
    - (inventory_hostname == "edge_primary" and services_settings.httpd.edge_on |bool ) or
       (inventory_hostname == "core_primary" and services_settings.httpd.core_on |bool )
  tags:
    - check
    - certificates
- name: Assign the FTPS certificate
  vars:
    - parameter_path: /certificateAlias
    - parameter_value: services
    - srv_name: Ftp Default
  ansible.builtin.uri:
    url: https://{{ hostvars[inventory_hostname]['ansible_fqdn'] }}:{{ SSL_ADMIN_PORT }}/api/v2.0/servers/{{ srv_name | urlencode() }}
    method: PATCH
    validate_certs: false
    user: admin
    password: "{{ TMP_ADMIN_PWD }}"
    force_basic_auth: true
    return_content: true
    status_code: [204]
    timeout: 60
    body_format: json
    body: "{{ patch_json }}"
    headers:
      Content-Type: application/json
      Accept: application/json
      idp_id: ST_IDP
  when:
    - (inventory_hostname == "edge_primary" and services_settings.ftpd.edge_on |bool ) or
      (inventory_hostname == "core_primary" and services_settings.ftpd.core_on |bool )
  tags:
    - certificates


- name: Assign the AS2 certificate
  vars:
    - parameter_path: /keyAlias
    - parameter_value: services
    - srv_name: As2 Default
  ansible.builtin.uri:
    url: https://{{ hostvars[inventory_hostname]['ansible_fqdn'] }}:{{ SSL_ADMIN_PORT }}/api/v2.0/servers/{{ srv_name | urlencode() }}
    method: PATCH
    validate_certs: false
    user: admin
    password: "{{ TMP_ADMIN_PWD }}"
    force_basic_auth: true
    return_content: true
    status_code: [204]
    timeout: 60
    body_format: json
    body: "{{ patch_json }}"
    headers:
      Content-Type: application/json
      Accept: application/json
      idp_id: ST_IDP
  when:
    - (inventory_hostname == "edge_primary" and services_settings.as2d.edge_on |bool ) or
       (inventory_hostname == "core_primary" and services_settings.as2d.core_on |bool )
  tags:
    - certificates

- name: Assign the SFTP certificate
  vars:
    - parameter_path: /certificateAlias
    - parameter_value: services
    - srv_name: Ssh Default
  ansible.builtin.uri:
    url: https://{{ hostvars[inventory_hostname]['ansible_fqdn'] }}:{{ SSL_ADMIN_PORT }}/api/v2.0/servers/{{ srv_name | urlencode() }}
    method: PATCH
    validate_certs: false
    user: admin
    password: "{{ TMP_ADMIN_PWD }}"
    force_basic_auth: true
    return_content: true
    status_code: [204]
    timeout: 60
    body_format: json
    body: "{{ patch_json }}"
    headers:
      Content-Type: application/json
      Accept: application/json
      idp_id: ST_IDP
  when:
    - (inventory_hostname == "edge_primary" and services_settings.sshd.edge_on |bool ) or
      (inventory_hostname == "core_primary" and services_settings.sshd.core_on |bool )
  tags:
    - certificates

- name: Assign the PeSIT certificate
  vars:
    - parameter_path: /pesitKeyAlias
    - parameter_value: services
    - srv_name: Pesit Default
  ansible.builtin.uri:
    url: https://{{ hostvars[inventory_hostname]['ansible_fqdn'] }}:{{ SSL_ADMIN_PORT }}/api/v2.0/servers/{{ srv_name | urlencode() }}
    method: PATCH
    validate_certs: false
    user: admin
    password: "{{ TMP_ADMIN_PWD }}"
    force_basic_auth: true
    return_content: true
    status_code: [204]
    timeout: 60
    body_format: json
    body: "{{ patch_json }}"
    headers:
      Content-Type: application/json
      Accept: application/json
      idp_id: ST_IDP
  when:
    - (inventory_hostname == "edge_primary" and services_settings.pesitd.edge_on |bool ) or
      (inventory_hostname == "core_primary" and services_settings.pesitd.core_on |bool )
  tags:
    - certificates

# ENABLE THE SERVICES
- name: Enable the FTP server
  vars:
    - parameter_path: /isFtpEnabled
    - parameter_value: true
    - srv_name: Ftp Default
  ansible.builtin.uri:
    url: https://{{ hostvars[inventory_hostname]['ansible_fqdn'] }}:{{ SSL_ADMIN_PORT }}/api/v2.0/servers/{{ srv_name | urlencode() }}
    method: PATCH
    validate_certs: false
    user: admin
    password: "{{ TMP_ADMIN_PWD }}"
    force_basic_auth: true
    return_content: true
    status_code: [204]
    timeout: 60
    body_format: json
    body: "{{ patch_json }}"
    headers:
      Content-Type: application/json
      Accept: application/json
      idp_id: ST_IDP
  when:
    - (inventory_hostname == "edge_primary" and services_settings.ftpd.edge_on |bool ) or
      (inventory_hostname == "core_primary" and services_settings.ftpd.core_on |bool )

- name: Enable FTPS
  vars:
    - parameter_path: /isFtpsEnabled
    - parameter_value: true
    - srv_name: Ftp Default
  ansible.builtin.uri:
    url: https://{{ hostvars[inventory_hostname]['ansible_fqdn'] }}:{{ SSL_ADMIN_PORT }}/api/v2.0/servers/{{ srv_name | urlencode() }}
    method: PATCH
    validate_certs: false
    user: admin
    password: "{{ TMP_ADMIN_PWD }}"
    force_basic_auth: true
    return_content: true
    status_code: [204]
    body_format: json
    timeout: 60
    body: "{{ patch_json }}"
    headers:
      Content-Type: application/json
      Accept: application/json
      idp_id: ST_IDP
  when:
    - (inventory_hostname == "edge_primary" and services_settings.ftpd.edge_on |bool ) or
      (inventory_hostname == "core_primary" and services_settings.ftpd.core_on |bool )

- name: Enable the HTTP server
  vars:
    - parameter_path: /isHttpsEnabled
    - parameter_value: true
    - srv_name: Http Default
  ansible.builtin.uri:
    url: https://{{ hostvars[inventory_hostname]['ansible_fqdn'] }}:{{ SSL_ADMIN_PORT }}/api/v2.0/servers/{{ srv_name | urlencode() }}
    method: PATCH
    validate_certs: false
    user: admin
    password: "{{ TMP_ADMIN_PWD }}"
    force_basic_auth: true
    return_content: true
    status_code: [204]
    timeout: 60
    body_format: json
    body: "{{ patch_json }}"
    headers:
      Content-Type: application/json
      Accept: application/json
      idp_id: ST_IDP
  when:
    - (inventory_hostname == "edge_primary" and services_settings.httpd.edge_on |bool ) or
      (inventory_hostname == "core_primary" and services_settings.httpd.core_on |bool )

- name: Enable AS2
  vars:
    - parameter_path: /sslListenerEnabled
    - parameter_value: true
    - srv_name: As2 Default
  ansible.builtin.uri:
    url: https://{{ hostvars[inventory_hostname]['ansible_fqdn'] }}:{{ SSL_ADMIN_PORT }}/api/v2.0/servers/{{ srv_name | urlencode() }}
    method: PATCH
    validate_certs: false
    user: admin
    password: "{{ TMP_ADMIN_PWD }}"
    force_basic_auth: true
    return_content: true
    status_code: [204]
    timeout: 60
    body_format: json
    body: "{{ patch_json }}"
    headers:
      Content-Type: application/json
      Accept: application/json
      idp_id: ST_IDP
  when:
    - (inventory_hostname == "edge_primary" and services_settings.as2d.edge_on |bool ) or
      (inventory_hostname == "core_primary" and services_settings.as2d.core_on |bool )

- name: Enable SFTP
  vars:
    - parameter_path: /isSftpEnabled
    - parameter_value: true
    - srv_name: Ssh Default
  ansible.builtin.uri:
    url: https://{{ hostvars[inventory_hostname]['ansible_fqdn'] }}:{{ SSL_ADMIN_PORT }}/api/v2.0/servers/{{ srv_name | urlencode() }}
    method: PATCH
    validate_certs: false
    user: admin
    password: "{{ TMP_ADMIN_PWD }}"
    force_basic_auth: true
    return_content: true
    status_code: [204]
    timeout: 60
    body_format: json
    body: "{{ patch_json }}"
    headers:
      Content-Type: application/json
      Accept: application/json
      idp_id: ST_IDP
  when:
    - (inventory_hostname == "edge_primary" and services_settings.sshd.edge_on |bool ) or
      (inventory_hostname == "core_primary" and services_settings.sshd.core_on |bool )

- name: Enable PESIT
  vars:
    - parameter_path: /isPesitSslEnabled
    - parameter_value: true
    - srv_name: Pesit Default
  ansible.builtin.uri:
    url: https://{{ hostvars[inventory_hostname]['ansible_fqdn'] }}:{{ SSL_ADMIN_PORT }}/api/v2.0/servers/{{ srv_name | urlencode() }}
    method: PATCH
    validate_certs: false
    user: admin
    password: "{{ TMP_ADMIN_PWD }}"
    force_basic_auth: true
    return_content: true
    status_code: [204]
    timeout: 60
    body_format: json
    body: "{{ patch_json }}"
    headers:
      Content-Type: application/json
      Accept: application/json
  when:
    - (inventory_hostname == "edge_primary" and services_settings.pesitd.edge_on |bool ) or
      (inventory_hostname == "core_primary" and services_settings.pesitd.core_on |bool )
