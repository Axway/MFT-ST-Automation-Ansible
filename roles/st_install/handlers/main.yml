- name: enable core_services # noqa: name[casing]
  become: true
  become_user: root
  loop: "{{ services_data | selectattr('changed', 'equalto', true) | map(attribute='item') | map(attribute='svc_name') | list }}"
  ansible.builtin.systemd:
    enabled: true
    name: "securetransport_{{ item }}"
- name: reload systemd # noqa: name[casing]
  become: true
  become_user: root
  ansible.builtin.systemd:
    daemon_reload: true
- name: stop internal postgres
  ansible.builtin.shell:
    cmd: "sh {{ FILEDRIVEHOME }}/bin/stop_db -f"
    executable: /usr/bin/bash
  changed_when: true

- name: start internal postgres
  ansible.builtin.shell:
    cmd: "sh {{ FILEDRIVEHOME }}/bin/start_db"
    executable: /usr/bin/bash
  changed_when: true

- name: Wait for db stop
  ansible.builtin.wait_for:
    host: 0.0.0.0
    port: 54321
    state: drained

- name: Start all
  become: true
  become_user: "{{ ST_USER }}"
  ansible.builtin.shell:
    cmd: "{{ FILEDRIVEHOME }}/bin/start_all"
    executable: /usr/bin/bash
  register: start_services
  changed_when: true

- name: Wait for start
  ansible.builtin.wait_for:
    host: 0.0.0.0
    port: "{{ SSL_ADMIN_PORT }}"
    delay: 10

- name: Stop all
  become: true
  become_user: "{{ ST_USER }}"
  ansible.builtin.shell:
    cmd: "sh {{ FILEDRIVEHOME }}/bin/stop_all -f"
    executable: /usr/bin/bash
  changed_when: true

- name: stop_all
  become: true
  become_user: "{{ ST_USER }}"
  ansible.builtin.shell:
    cmd: "sh {{ FILEDRIVEHOME }}/bin/stop_all -f"
    executable: /usr/bin/bash
  changed_when: true


# handlers file for st_install
