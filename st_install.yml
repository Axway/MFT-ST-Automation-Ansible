- name: Installing the ST nodes
  hosts: ST_NODES
  become: true
  become_user: axway
  vars_files:
    - files/external_vars.yml
    - files/services_vars.yml
  pre_tasks:
    - name: Is ST Installed?
      ansible.builtin.stat:
        path: "{{ AXWAY_HOME }}/SecureTransport"
      register: is_installed
      tags:
        - st_install

    - name: Check if installer is there
      ansible.builtin.stat:
        path: "{{ INSTALLER_DIR }}/setup.sh"
      register: installer_file
      when:
        - not is_installed.stat.exists
      tags:
        - st_install


    - name: Download and extract the ST installer
      ansible.builtin.unarchive:
        src: "{{ ST_DOWNLOAD_LINK }}"
        dest: "{{ INSTALLER_DIR }}"
        mode: '0755'
        group: axway
        owner: axway
        validate_certs: false
        remote_src: true
      when:
        - (installer_file.stat.exists is undefined) or (not installer_file.stat.exists)
        - not is_installed.stat.exists
      tags:
        - st_install
        - axway_lab_specific

    - name: Find the name of the archive that contains the JRE
      ansible.builtin.find:
        paths: "{{ INSTALLER_DIR }}/Java/linux-x86"
        patterns: 'jre1*.zip'
      register: file_to_copy
      tags:
        - st_install
      when:
        - not is_installed.stat.exists

    - name: Find the name of the Axway_Installer
      ansible.builtin.find:
        paths: "{{ INSTALLER_DIR }}/Components/Configuration"
        patterns: 'Install_Axway_Installer*.properties'
      register: axway_installer
      tags:
        - st_install
      when:
        - not is_installed.stat.exists

    - name: Filter the Axway Installer name and set a variable
      ansible.builtin.set_fact:
        installer_properties: "{{ axway_installer.files.0.path | basename }}"
      when:
        - not is_installed.stat.exists
      tags:
        - d

    - name: Find the name of the ST_Installer
      ansible.builtin.find:
        paths: "{{ INSTALLER_DIR }}/Components/Configuration/"
        patterns: 'Install_SecureTransport*.properties'
      register: silent_file
      when:
        - not is_installed.stat.exists
      tags:
        - st_install

    - name: Filter the ST Installer name and set a variable
      ansible.builtin.set_fact:
        st_silentfile_properties: "{{ silent_file.files.0.path | basename }}"
      when:
        - not is_installed.stat.exists
      tags:
        - d
    - name: Unarchive the JRE
      ansible.builtin.unarchive:
        src: "{{ file_to_copy['files'][0]['path'] }}"
        dest: "{{ INSTALLER_DIR }}/JRE"
        group: axway
        owner: axway
        mode: '0755'
        remote_src: true
      tags:
        - st_install
      when:
        - not is_installed.stat.exists

    - name: Ansible copy files remote to remote
      become: true
      become_user: axway
      ansible.builtin.copy:
        src: "{{ INSTALLER_DIR }}/Components/Configuration/{{ item }}"
        dest: "{{ INSTALLER_DIR }}"
        mode: '0755'
        remote_src: true
      with_items:
        ["{{ installer_properties }}", "{{ st_silentfile_properties }}"]
      tags:
        - st_install
      when:
        - not is_installed.stat.exists

    - name: Update Install_Axway_Installer properties
      become: true
      become_user: axway
      ansible.builtin.blockinfile:
        path: "{{ INSTALLER_DIR }}/{{ installer_properties }}"
        block: |
          InstallationLogicalName = SecureTransport
          InstallDir = {{ AXWAY_HOME }}/
          AllAxwayComps32 = false
          AllAxwayComps64 = true
          IncludeFiles =
          IncludeFiles.SecureTransport = {{ st_silentfile_properties }}
          Component.LongName = Axway
          DVDLocation =
        backup: true
      tags:
        - st_install
      when:
        - not is_installed.stat.exists

    - name: Update Install_SecureTransport_V5.5.properties for all nodes
      become: true
      become_user: axway
      ansible.builtin.blockinfile:
        path: "{{ INSTALLER_DIR }}/{{ st_silentfile_properties }}"
        marker: "# BEGIN ANSIBLE CHANGES FOR ALL NODES"
        block: |
          Component.ACCEPT_GENERAL_CONDITIONS = Yes
          Component.JavaHome = {{ AXWAY_HOME }}/Java/linux-x86/jre11_u11.0.17_8_64
          SelectedBitArchitecture = 64
          InstMode = Install
          SecureTransport = true
          SecureTransport.Type = Module
          SecureTransport.ModuleType = Installed
          SecureTransport.LogicalName = SecureTransport
          SecureTransport.ParentName = null
          SecureTransport.Title = Axway SecureTransport V5.5
          Server =
          Server.Type = Module
          Server.ModuleType =
          Server.LogicalName = Server
          Server.ParentName = SecureTransport
          Server.Title = Server
          Edge.Type = Module
          Edge = False
          Edge.ModuleType =
          Edge.LogicalName = Edge
          Edge.ParentName = SecureTransport
          Edge.Title = Edge
          ServerDocker = false
          ServerDocker.Type = Module
          ServerDocker.ModuleType = NotInstalled
          ServerDocker.LogicalName = ServerDocker
          ServerDocker.ParentName = SecureTransport
          ServerDocker.Title = ServerDocker
          EdgeDocker = false
          EdgeDocker.Type = Module
          EdgeDocker.ModuleType = NotInstalled
          EdgeDocker.LogicalName = EdgeDocker
          EdgeDocker.ParentName = SecureTransport
          EdgeDocker.Title = EdgeDocker
          InstallDir = {{ AXWAY_HOME }}/SecureTransport/
          userName = axway
          isNonRootInstall = true
          dbType =
          sslAdminPort = 8444
          sslAdminPort.Type = Integer
          tomcatShutdownPort = 8005
          tomcatShutdownPort.Type = Integer
          enableLogRotation = true
        backup: true
      tags:
        - st_install
      when:
        - not is_installed.stat.exists

    - name: Configure Install_SecureTransport_V5.5.properties for ST Core
      become: true
      become_user: axway
      ansible.builtin.blockinfile:
        path: "{{ INSTALLER_DIR }}/{{ st_silentfile_properties }}"
        block: |
          postgrePassword.Format = DefenceV1
          postgrePassword =
          Server = true
          Server.ModuleType = Installed
          Edge.ModuleType = NotInstalled
          dbType =  usePostgreSQLExternal
          postgreHost = {{ DB_HOSTNAME }}
          postgreHost.Type = HostName
          postgrePort = 5432
          postgrePort.Type = Integer
          postgreLoginName = {{ DB_USER }}
          postgreDatabaseName = {{ DB_NAME }}
          postgreUseExistingSchema = false
          postgreUseSecureConnection = false
          postgreCertificateDN =
          postgreTrustStoreFilePath =
          externalDBTrustStore =
          externalDBUseExistingSchema = false
          externalDBUseSecureConnection = false
          clusterNodeValue = {{ hostvars[inventory_hostname].ansible_fqdn }}
        backup: true
      when:
        - inventory_hostname in groups["cores"]
        - not is_installed.stat.exists
      tags:
        - st_install

    - name: Update DB password in Install_SecureTransport_V5.5.properties
      become: true
      become_user: axway
      ansible.builtin.shell: "{{ INSTALLER_DIR }}/Tools/SilentFileEditor/SilentFileEditor.sh \
         {{ INSTALLER_DIR }}/{{ st_silentfile_properties }} postgrePassword {{ DB_USER_PASSWORD }} -c"
      args:
        chdir: "{{ INSTALLER_DIR }}/Tools/SilentFileEditor/"
        executable: /bin/bash
      environment:
        JAVA_HOME: "{{ INSTALLER_DIR }}/JRE"
      register: user_cmd_result
      changed_when: false
      when:
        - inventory_hostname in groups["cores"]
        - not is_installed.stat.exists
      tags:
        - st_install

    - name: Configure Install_SecureTransport_V5.5.properties for ST Edge
      become: true
      become_user: axway
      ansible.builtin.blockinfile:
        path: "{{ INSTALLER_DIR }}/{{ st_silentfile_properties }}"
        marker: "# BEGIN ANSIBLE CHANGES FOR THE ST EDGES"
        block: |
          Server = false
          Server.ModuleType = NotInstalled
          Edge = true
          Edge.ModuleType = Installed
          dbType = useDBLocal
          internalDBPort = 33060
          internalDBPort.Type = IPPortOwner
          internalDBPort.Max = 65535
          internalDBPort.Min = 1024
          internalDBUseSecureConnection = false
          internalDBAutoGenerateCertificates = false
          internalDBCaPath =
          internalDBServerKeyPath =
          internalDBServerCertPath =
          externalDBUseExistingSchema = false
          externalDBUseSecureConnection = false
        backup: true
      when:
        - inventory_hostname in groups["edges"]
        - not is_installed.stat.exists
      tags:
        - st_install

    - name: Configure Install_SecureTransport_V5.5.properties for ST Core Secondary
      become: true
      become_user: axway
      ansible.builtin.blockinfile:
        marker: "# BEGIN ANSIBLE CHANGES FOR THE ST CORE SECONDARY"
        path: "{{ INSTALLER_DIR }}/{{ st_silentfile_properties }}"
        block: |
          externalDBUseExistingSchema = true
          postgreUseExistingSchema = true
          SecretFilePath = {{ INSTALLER_DIR }}/taeh
          SecretFilePath.Type = File
          sslAdminPort =
          tomcatShutdownPort =
        backup: true
      when:
        - inventory_hostname == "core_secondary"
        - not is_installed.stat.exists
      tags:
        - st_install

    - name: Configure Install_SecureTransport_V5.5.properties for ST Edge Secondary
      become: true
      become_user: axway
      ansible.builtin.blockinfile:
        marker: "# BEGIN ANSIBLE CHANGES FOR THE ST EDGES SECONDARY"
        path: "{{ INSTALLER_DIR }}/{{ st_silentfile_properties }}"
        block: |
          SecretFilePath = {{ INSTALLER_DIR }}/taeh
          SecretFilePath.Type = File
        backup: true
      when:
        - inventory_hostname == "edge_secondary"
        - not is_installed.stat.exists
      tags:
        - st_install


    - name: SilentInstall SecureTransport Primaries
      become: true
      become_user: axway
      ansible.builtin.command: "{{ INSTALLER_DIR }}/setup.sh -Xmx 6G -s {{ INSTALLER_DIR }}/{{ installer_properties }}"
      changed_when: false
      environment:
        TEMPORARY_DIR: /tmp
      args:
        chdir: "{{ INSTALLER_DIR }}"
      when:
        - inventory_hostname == "edge_primary" or inventory_hostname == "core_primary"
        - not is_installed.stat.exists
      tags:
        - st_install

    - name: Get the taeh from the ST server primary
      ansible.builtin.fetch:
        src: "{{ AXWAY_HOME }}/SecureTransport/bin/taeh"
        dest: files/core/
        flat: true
      when: inventory_hostname == "core_primary"
      tags:
        - st_install


    - name: Get the taeh from the ST edge primary
      ansible.builtin.fetch:
        src: "{{ AXWAY_HOME }}/SecureTransport/bin/taeh"
        dest: files/edge/
        flat: true
      when: inventory_hostname == "edge_primary"
      tags:
        - st_install

    - name: Push the taeh file to the secondary core
      ansible.builtin.copy:
        src: files/core/taeh
        dest: "{{ INSTALLER_DIR }}/taeh"
        owner: axway
        group: axway
        mode: '0755'
      when: inventory_hostname == "core_secondary"
      tags:
        - st_install

    - name: Push the taeh file to the secondary edge
      ansible.builtin.copy:
        src: files/edge/taeh
        dest: "{{ INSTALLER_DIR }}/taeh"
        owner: axway
        group: axway
        mode: '0755'
      when: inventory_hostname == "edge_secondary"
      tags:
        - st_install

    - name: SilentInstall SecureTransport Secondaries
      become: true
      become_user: axway
      ansible.builtin.command: "{{ INSTALLER_DIR }}/setup.sh -Xmx 6G -s {{ INSTALLER_DIR }}/{{ installer_properties }}"
      changed_when: false
      environment:
        TEMPORARY_DIR: /tmp
      args:
        chdir: "{{ INSTALLER_DIR }}"
      when:
        - inventory_hostname == "edge_secondary" or inventory_hostname == "core_secondary"
        - not is_installed.stat.exists
      tags:
        - st_install

    - name: Download and extract the Azure FileStorage plugin
      ansible.builtin.unarchive:
        src: "{{ AZURE_FILE_PLUGIN }}"
        dest: "{{ AXWAY_HOME }}/SecureTransport/plugins/transferSites/"
        mode: '0755'
        group: axway
        owner: axway
        validate_certs: false
        remote_src: true
      when:
        - inventory_hostname in groups["cores"]
      tags:
        - st_install
        - axway_lab_specific
    - name: Download and extract the s3 plugin
      ansible.builtin.unarchive:
        src: "{{ s3_PLUGIN }}"
        dest: "{{ AXWAY_HOME }}/SecureTransport/plugins/transferSites/"
        mode: '0755'
        group: axway
        owner: axway
        validate_certs: false
        remote_src: true
      when:
        - inventory_hostname in groups["cores"]
      tags:
        - st_install
        - axway_lab_specific
    - name: Download and extract the SMB plugin
      ansible.builtin.unarchive:
        src: "{{ SMB_PLUGIN }}"
        dest: "{{ AXWAY_HOME }}/SecureTransport/plugins/transferSites/"
        mode: '0755'
        group: axway
        owner: axway
        validate_certs: false
        remote_src: true
      when:
        - inventory_hostname in groups["cores"]
      tags:
        - st_install
        - axway_lab_specific

  handlers:
    - name: enable core_services # noqa: name[casing]
      become: true
      become_user: root
      loop: "{{ services_data | selectattr('changed', 'equalto', true) | map(attribute='item') | map(attribute='svc_name') | list }}"
      ansible.builtin.systemd:
        enabled: true
        name: "securetransport_{{ item }}"
    - name: reload systemd # noqa: name[casing]
      become: true
      become_user: root
      ansible.builtin.systemd:
        daemon_reload: true
